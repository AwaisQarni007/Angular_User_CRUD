{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/toast.service\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"@angular/forms\";\nclass EditUserModalComponent {\n  constructor(toast, userService) {\n    this.toast = toast;\n    this.userService = userService;\n    this.userId = localStorage.getItem('selectedUser');\n    this.user = {\n      name: '',\n      email: '',\n      profilePictureUrl: ''\n    };\n  }\n  ngOnInit() {\n    // Fetch user data by ID when the component initializes\n    this.userService.getUserById(this.userId).subscribe(user => {\n      this.user = user[0];\n      console.log(\"Edit Modal : \", this.user[0]);\n    });\n  }\n  updateUser() {\n    this.userService.updateUser(this.user).subscribe(response => {\n      // Handle the response if needed\n      // Show a success toast notification\n      this.toast.showToast('User updated successfully!', 'Success', 'success');\n      // Close the modal after saving changes\n      this.closeModal();\n    }, error => {\n      // Handle error response if needed\n      // Show a danger toast notification\n      this.toast.showToast('Failed to update user. Please try again.', 'Alert', 'warning');\n    });\n  }\n  closeModal() {\n    // Close the modal using Bootstrap modal methods\n    const modalElement = this.el.nativeElement.querySelector('#editUserModal');\n    this.renderer.removeClass(modalElement, 'show');\n    this.renderer.setStyle(modalElement, 'display', 'none');\n    this.renderer.removeClass(document.body, 'modal-open');\n    const modalBackdrop = document.querySelector('.modal-backdrop');\n    if (modalBackdrop) {\n      modalBackdrop.remove();\n    }\n  }\n}\n_class = EditUserModalComponent;\n_class.ɵfac = function EditUserModalComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ToastService), i0.ɵɵdirectiveInject(i2.UserService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-edit-user-modal\"]],\n  decls: 28,\n  vars: 3,\n  consts: [[\"id\", \"editUserModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"editUserModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"editUserModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"mb-3\"], [\"for\", \"editName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"editName\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editEmail\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"editEmail\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editImage\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"editImage\", \"name\", \"profilePictureUrl\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function EditUserModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-user-modal works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"h5\", 4);\n      i0.ɵɵtext(7, \"Edit User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"button\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"form\")(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditUserModalComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.user.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EditUserModalComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 7)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Image URL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function EditUserModalComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.user.profilePictureUrl = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(23, \"div\", 14)(24, \"button\", 15);\n      i0.ɵɵtext(25, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function EditUserModalComponent_Template_button_click_26_listener() {\n        return ctx.updateUser();\n      });\n      i0.ɵɵtext(27, \"Save changes\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.profilePictureUrl);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EditUserModalComponent };","map":{"version":3,"names":["EditUserModalComponent","constructor","toast","userService","userId","localStorage","getItem","user","name","email","profilePictureUrl","ngOnInit","getUserById","subscribe","console","log","updateUser","response","showToast","closeModal","error","modalElement","el","nativeElement","querySelector","renderer","removeClass","setStyle","document","body","modalBackdrop","remove","i0","ɵɵdirectiveInject","i1","ToastService","i2","UserService","selectors","decls","vars","consts","template","EditUserModalComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","EditUserModalComponent_Template_input_ngModelChange_14_listener","$event","EditUserModalComponent_Template_input_ngModelChange_18_listener","EditUserModalComponent_Template_input_ngModelChange_22_listener","EditUserModalComponent_Template_button_click_26_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\PC\\Desktop\\Angular Demo\\angular\\src\\app\\edit-user-modal\\edit-user-modal.component.ts","C:\\Users\\PC\\Desktop\\Angular Demo\\angular\\src\\app\\edit-user-modal\\edit-user-modal.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { ToastService } from '../service/toast.service';\n\n@Component({\n  selector: 'app-edit-user-modal',\n  templateUrl: './edit-user-modal.component.html',\n  styleUrls: ['./edit-user-modal.component.css']\n})\nexport class EditUserModalComponent implements OnInit {\n  userId: any = localStorage.getItem('selectedUser');\n  user: any = {\n    name: '',\n    email: '',\n    profilePictureUrl: ''\n  };\n\n  constructor(private toast: ToastService, private userService: UserService) { }\n\n  ngOnInit() {\n    // Fetch user data by ID when the component initializes\n    this.userService.getUserById(this.userId).subscribe(user => {\n      this.user = user[0];\n      console.log(\"Edit Modal : \", this.user[0])\n    });\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.user).subscribe(\n      (response: any) => {\n        // Handle the response if needed\n\n        // Show a success toast notification\n        this.toast.showToast('User updated successfully!', 'Success', 'success');\n\n        // Close the modal after saving changes\n        this.closeModal();\n      },\n      (error: any) => {\n        // Handle error response if needed\n\n        // Show a danger toast notification\n        this.toast.showToast('Failed to update user. Please try again.', 'Alert', 'warning');\n      }\n    );\n  }\n  closeModal() {\n    // Close the modal using Bootstrap modal methods\n    const modalElement = this.el.nativeElement.querySelector('#editUserModal');\n    this.renderer.removeClass(modalElement, 'show');\n    this.renderer.setStyle(modalElement, 'display', 'none');\n    this.renderer.removeClass(document.body, 'modal-open');\n    const modalBackdrop = document.querySelector('.modal-backdrop');\n    if (modalBackdrop) {\n      modalBackdrop.remove();\n    }\n  }\n\n}\n","<p>edit-user-modal works!</p>\n<div class=\"modal fade\" id=\"editUserModal\" tabindex=\"-1\" aria-labelledby=\"editUserModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"editUserModalLabel\">Edit User</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form>\n                    <div class=\"mb-3\">\n                        <label for=\"editName\" class=\"form-label\">Username</label>\n                        <input type=\"text\" class=\"form-control\" id=\"editName\" [(ngModel)]=\"user.name\" name=\"name\">\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"editEmail\" class=\"form-label\">Email</label>\n                        <input type=\"email\" class=\"form-control\" id=\"editEmail\" [(ngModel)]=\"user.email\" name=\"email\">\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"editImage\" class=\"form-label\">Image URL</label>\n                        <input type=\"text\" class=\"form-control\" id=\"editImage\" [(ngModel)]=\"user.profilePictureUrl\"\n                            name=\"profilePictureUrl\">\n                    </div>\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"updateUser()\">Save changes</button>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}