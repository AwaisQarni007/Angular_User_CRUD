{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/forms\";\nclass EditUserModalComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.user = {\n      name: '',\n      email: '',\n      profilePictureUrl: ''\n    };\n  }\n  ngOnInit() {\n    // Fetch user data by ID when the component initializes\n    this.userService.getUserById(this.userId).subscribe(user => {\n      this.user = user;\n    });\n  }\n  updateUser() {\n    // Implement update logic using this.user object\n    this.userService.updateUser(this.user).subscribe(response => {\n      // Handle the response if needed\n      // Close the modal after saving changes\n      // You can implement a close modal logic here\n    });\n  }\n}\n_class = EditUserModalComponent;\n_class.ɵfac = function EditUserModalComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.UserService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-edit-user-modal\"]],\n  inputs: {\n    userId: \"userId\"\n  },\n  decls: 28,\n  vars: 3,\n  consts: [[\"id\", \"editUserModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"editUserModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"editUserModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"mb-3\"], [\"for\", \"editName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"editName\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editEmail\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"editEmail\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"editImage\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"editImage\", \"name\", \"profilePictureUrl\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function EditUserModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-user-modal works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"h5\", 4);\n      i0.ɵɵtext(7, \"Edit User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"button\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6)(10, \"form\")(11, \"div\", 7)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditUserModalComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.user.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EditUserModalComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 7)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Image URL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function EditUserModalComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.user.profilePictureUrl = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(23, \"div\", 14)(24, \"button\", 15);\n      i0.ɵɵtext(25, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function EditUserModalComponent_Template_button_click_26_listener() {\n        return ctx.updateUser();\n      });\n      i0.ɵɵtext(27, \"Save changes\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.profilePictureUrl);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EditUserModalComponent };","map":{"version":3,"names":["EditUserModalComponent","constructor","userService","user","name","email","profilePictureUrl","ngOnInit","getUserById","userId","subscribe","updateUser","response","i0","ɵɵdirectiveInject","i1","UserService","selectors","inputs","decls","vars","consts","template","EditUserModalComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","EditUserModalComponent_Template_input_ngModelChange_14_listener","$event","EditUserModalComponent_Template_input_ngModelChange_18_listener","EditUserModalComponent_Template_input_ngModelChange_22_listener","EditUserModalComponent_Template_button_click_26_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\PC\\Desktop\\Angular Demo\\angular\\src\\app\\edit-user-modal\\edit-user-modal.component.ts","C:\\Users\\PC\\Desktop\\Angular Demo\\angular\\src\\app\\edit-user-modal\\edit-user-modal.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-edit-user-modal',\n  templateUrl: './edit-user-modal.component.html',\n  styleUrls: ['./edit-user-modal.component.css']\n})\nexport class EditUserModalComponent implements OnInit {\n  @Input()\n  userId!: number;\n  user: any = {\n    name: '',\n    email: '',\n    profilePictureUrl: ''\n  };\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {\n    // Fetch user data by ID when the component initializes\n    this.userService.getUserById(this.userId).subscribe(user => {\n      this.user = user;\n    });\n  }\n\n  updateUser() {\n    // Implement update logic using this.user object\n    this.userService.updateUser(this.user).subscribe(response => {\n      // Handle the response if needed\n      // Close the modal after saving changes\n      // You can implement a close modal logic here\n    });\n  }\n}\n","<p>edit-user-modal works!</p>\n<div class=\"modal fade\" id=\"editUserModal\" tabindex=\"-1\" aria-labelledby=\"editUserModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"editUserModalLabel\">Edit User</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form>\n                    <div class=\"mb-3\">\n                        <label for=\"editName\" class=\"form-label\">Username</label>\n                        <input type=\"text\" class=\"form-control\" id=\"editName\" [(ngModel)]=\"user.name\" name=\"name\">\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"editEmail\" class=\"form-label\">Email</label>\n                        <input type=\"email\" class=\"form-control\" id=\"editEmail\" [(ngModel)]=\"user.email\" name=\"email\">\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"editImage\" class=\"form-label\">Image URL</label>\n                        <input type=\"text\" class=\"form-control\" id=\"editImage\" [(ngModel)]=\"user.profilePictureUrl\"\n                            name=\"profilePictureUrl\">\n                    </div>\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"updateUser()\">Save changes</button>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}