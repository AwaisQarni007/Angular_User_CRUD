{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/toast.service\";\nimport * as i2 from \"@angular/forms\";\nclass ContactusComponent {\n  constructor(toast, fb) {\n    this.toast = toast;\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.myform = this.fb.group({\n      email: '',\n      password: ''\n    });\n  }\n  OnSubmit() {\n    if (this.myform.controls['email'].value == \"\") {\n      document.getElementById(\"exampleInputEmail1\")?.focus();\n      this.toast.showToast('Please enter Email!', 'Alert', 'warning');\n    } else if (this.myform.controls['password'].value == \"\") {\n      document.getElementById(\"exampleInputPassword1\")?.focus();\n      document.getElementById('password')?.focus();\n    } else {\n      // this.toast.success('Form Submitted Successfully', 'Success',{\n      //   timeOut:2000,\n      //   progressBar: true,\n      //   closeButton:true,\n      //   tapToDismiss:true,\n      //   newestOnTop:true\n      // });\n    }\n  }\n}\n_class = ContactusComponent;\n_class.ɵfac = function ContactusComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ToastService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-contactus\"]],\n  decls: 22,\n  vars: 1,\n  consts: [[\"role\", \"alert\", 1, \"alert\", \"alert-primary\"], [1, \"container\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"submit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"email\", \"autocomplete\", \"off\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"formControlName\", \"email\", 1, \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"password\", \"autocomplete\", \"off\", \"id\", \"exampleInputPassword1\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"exampleCheck1\", 1, \"form-check-input\"], [\"for\", \"exampleCheck1\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"reset\", 1, \"btn\", \"btn-danger\"]],\n  template: function ContactusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \" Contactus works!\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function ContactusComponent_Template_form_submit_3_listener() {\n        return ctx.OnSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵtext(9, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵelementStart(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Check me out\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"button\", 12);\n      i0.ɵɵtext(19, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 13);\n      i0.ɵɵtext(21, \"Reset\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.myform);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ContactusComponent };","map":{"version":3,"names":["ContactusComponent","constructor","toast","fb","ngOnInit","myform","group","email","password","OnSubmit","controls","value","document","getElementById","focus","showToast","i0","ɵɵdirectiveInject","i1","ToastService","i2","FormBuilder","selectors","decls","vars","consts","template","ContactusComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ContactusComponent_Template_form_submit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\PC\\Desktop\\Angular Demo\\angular\\src\\app\\contactus\\contactus.component.ts","C:\\Users\\PC\\Desktop\\Angular Demo\\angular\\src\\app\\contactus\\contactus.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, FormsModule }   from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ToastService } from '../service/toast.service';\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.css']\n})\nexport class ContactusComponent implements OnInit {\nmyform!: FormGroup;\n  constructor(private toast: ToastService,private fb: FormBuilder){}\n  ngOnInit(): void {\nthis.myform = this.fb.group({\n  email: '',\n  password:''\n});\n\n  }\n\n  OnSubmit()\n  {\n    if(this.myform.controls['email'].value ==\"\") \n    {\n      document.getElementById(\"exampleInputEmail1\")?.focus();\n      this.toast.showToast('Please enter Email!','Alert','warning');\n    }\n    else if(this.myform.controls['password'].value ==\"\") \n    {\n      document.getElementById(\"exampleInputPassword1\")?.focus();\n\n      document.getElementById('password')?.focus();\n    }\n    else \n    {\n      // this.toast.success('Form Submitted Successfully', 'Success',{\n      //   timeOut:2000,\n      //   progressBar: true,\n      //   closeButton:true,\n      //   tapToDismiss:true,\n      //   newestOnTop:true\n      // });\n    }\n    \n  }\n\n}\n","<div class=\"alert alert-primary\" role=\"alert\">\n    Contactus works!\n</div>\n\n<div class=\"container\">\n    <form [formGroup]=\"myform\"  (submit)=\"OnSubmit()\" autocomplete=\"off\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n          <input type=\"email\" autocomplete=\"off\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" formControlName=\"email\">\n          <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n          <input type=\"password\" autocomplete=\"off\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n        </div>\n        <div class=\"mb-3 form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\n          <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        <button type=\"reset\" class=\"btn btn-danger\">Reset</button>\n      </form>\n</div>"],"mappings":";;;;AAKA,MAKaA,kBAAkB;EAE7BC,YAAoBC,KAAmB,EAASC,EAAe;IAA3C,KAAAD,KAAK,GAALA,KAAK;IAAuB,KAAAC,EAAE,GAAFA,EAAE;EAAe;EACjEC,QAAQA,CAAA;IACV,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC1BC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAC;KACV,CAAC;EAEA;EAEAC,QAAQA,CAAA;IAEN,IAAG,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,OAAO,CAAC,CAACC,KAAK,IAAG,EAAE,EAC3C;MACEC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,EAAEC,KAAK,EAAE;MACtD,IAAI,CAACZ,KAAK,CAACa,SAAS,CAAC,qBAAqB,EAAC,OAAO,EAAC,SAAS,CAAC;KAC9D,MACI,IAAG,IAAI,CAACV,MAAM,CAACK,QAAQ,CAAC,UAAU,CAAC,CAACC,KAAK,IAAG,EAAE,EACnD;MACEC,QAAQ,CAACC,cAAc,CAAC,uBAAuB,CAAC,EAAEC,KAAK,EAAE;MAEzDF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,EAAEC,KAAK,EAAE;KAC7C,MAED;MACE;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;EAGJ;;SAnCWd,kBAAkB;;mBAAlBA,MAAkB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;;QAAlBrB,MAAkB;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCV/BZ,EAAA,CAAAc,cAAA,aAA8C;MAC1Cd,EAAA,CAAAe,MAAA,0BACJ;MAAAf,EAAA,CAAAgB,YAAA,EAAM;MAENhB,EAAA,CAAAc,cAAA,aAAuB;MACSd,EAAA,CAAAiB,UAAA,oBAAAC,mDAAA;QAAA,OAAUL,GAAA,CAAApB,QAAA,EAAU;MAAA,EAAC;MAC7CO,EAAA,CAAAc,cAAA,aAAkB;MACmCd,EAAA,CAAAe,MAAA,oBAAa;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACxEhB,EAAA,CAAAmB,SAAA,eAAyI;MACzInB,EAAA,CAAAc,cAAA,aAAsC;MAAAd,EAAA,CAAAe,MAAA,qDAA8C;MAAAf,EAAA,CAAAgB,YAAA,EAAM;MAE5FhB,EAAA,CAAAc,cAAA,cAAkB;MACsCd,EAAA,CAAAe,MAAA,gBAAQ;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACtEhB,EAAA,CAAAmB,SAAA,gBAAqH;MACvHnB,EAAA,CAAAgB,YAAA,EAAM;MACNhB,EAAA,CAAAc,cAAA,cAA6B;MAC3Bd,EAAA,CAAAmB,SAAA,iBAAmE;MACnEnB,EAAA,CAAAc,cAAA,iBAAoD;MAAAd,EAAA,CAAAe,MAAA,oBAAY;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAE1EhB,EAAA,CAAAc,cAAA,kBAA8C;MAAAd,EAAA,CAAAe,MAAA,cAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAS;MAC7DhB,EAAA,CAAAc,cAAA,kBAA4C;MAAAd,EAAA,CAAAe,MAAA,aAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MAfxDhB,EAAA,CAAAoB,SAAA,GAAoB;MAApBpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAAxB,MAAA,CAAoB;;;;;;SDKjBL,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}